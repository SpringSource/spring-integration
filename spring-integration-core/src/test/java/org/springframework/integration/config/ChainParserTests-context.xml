<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/integration"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/integration
			http://www.springframework.org/schema/integration/spring-integration.xsd">

	<channel id="pollableInput1">
		<queue />
	</channel>

	<channel id="pollableInput2">
		<queue />
	</channel>

	<channel id="output">
		<queue />
	</channel>

	<channel id="replyOutput">
		<queue />
	</channel>

	<chain input-channel="filterInput" output-channel="output">
		<filter ref="typeSelector" />
		<service-activator ref="testHandler" />
	</chain>

	<chain input-channel="headerEnricherInput">
		<header-enricher>
			<reply-channel ref="replyOutput"/>
			<correlation-id value="ABC"/>
			<header name="testValue" value="XYZ" />
			<header name="testRef" ref="testHeaderValue" />
		</header-enricher>
		<service-activator ref="testHandler" />
	</chain>

	<chain input-channel="pollableInput1" output-channel="output">
		<filter ref="typeSelector" />
		<poller fixed-delay="10000" />
		<service-activator ref="testHandler" />
	</chain>

	<chain input-channel="pollableInput2" output-channel="output">
		<service-activator ref="testHandler" />
		<poller ref="topLevelPoller"/>
	</chain>

	<poller id="topLevelPoller" fixed-delay="5000" />

	<chain input-channel="beanInput" output-channel="output">
		<beans:bean
			class="org.springframework.integration.config.ChainParserTests$StubHandler" />
	</chain>

	<chain input-channel="aggregatorInput" output-channel="output">
		<aggregator ref="aggregatorBean" method="aggregate" />
		<chain>
			<filter ref="typeSelector" />
			<service-activator ref="testHandler" />
		</chain>
	</chain>

	<chain input-channel="payloadTypeRouterInput">
		<payload-type-router>
			<mapping type="java.lang.String" channel="strings"/>
			<mapping type="java.lang.Number" channel="numbers"/>
		</payload-type-router>
	</chain>

	<chain input-channel="headerValueRouterInput">
		<header-value-router header-name="routingHeader"/>
	</chain>

	<chain input-channel="headerValueRouterWithMappingInput">
		<header-value-router header-name="routingHeader">
			<mapping value="isString" channel="strings"/>
			<mapping value="isNumber" channel="numbers"/>
		</header-value-router>
	</chain>

  <chain id="chainWithClaimChecks" input-channel="claimCheckInput" output-channel="claimCheckOutput">
     <claim-check-in/>
     <claim-check-out/>
  </chain>

  <channel id="claimCheckOutput">
    <queue/>
  </channel>

	<chain id="chainWithSendTimeout" input-channel="chainWithSendTimeoutInput" output-channel="output" send-timeout="9876">
		<filter ref="typeSelector" />
		<service-activator ref="testHandler" />
	</chain>

	<chain input-channel="outboundChannelAdapterChannel">
		<outbound-channel-adapter ref="testConsumer"/>
	</chain>

	<chain id="logChain" input-channel="loggingChannelAdapterChannel">
		<transformer expression="payload.toUpperCase()"/>
		<logging-channel-adapter level="WARN"/>
	</chain>

	<beans:bean id="testConsumer" class="org.springframework.integration.config.TestConsumer" />

	<channel id="strings">
		<queue/>
	</channel>

	<channel id="numbers">
		<queue/>
	</channel>

	<beans:bean id="aggregatorBean"
		class="org.springframework.integration.config.ChainParserTests$StubAggregator" />

	<beans:bean id="testHeaderValue" class="java.lang.Integer">
		<beans:constructor-arg value="123" />
	</beans:bean>

	<beans:bean id="typeSelector"
		class="org.springframework.integration.selector.PayloadTypeSelector">
		<beans:constructor-arg value="java.lang.String" />
	</beans:bean>

	<beans:bean id="testHandler"
		class="org.springframework.integration.config.TestHandler">
		<beans:constructor-arg value="1" />
		<beans:property name="replyMessageText" value="foo" />
	</beans:bean>

	<beans:bean id="messageStore" class="org.springframework.integration.store.SimpleMessageStore"/>

</beans:beans>
