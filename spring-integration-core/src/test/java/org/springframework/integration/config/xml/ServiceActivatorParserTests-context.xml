<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="https://www.springframework.org/schema/integration"
	xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="https://www.springframework.org/schema/beans"
	xsi:schemaLocation="https://www.springframework.org/schema/beans
			https://www.springframework.org/schema/beans/spring-beans.xsd
			https://www.springframework.org/schema/integration
			https://www.springframework.org/schema/integration/spring-integration.xsd">

	<service-activator id="testAlias" input-channel="literalExpressionInput" expression="'foo'"/>

	<service-activator input-channel="beanAsTargetInput" expression="@testBean.caps(payload)"/>

	<service-activator input-channel="beanAsArgumentInput" expression="payload.getSimpleClassName(@testBean)"/>

	<service-activator input-channel="beanInvocationResultInput" expression="payload.concat(@testBean.caps('foo'))"/>

	<service-activator input-channel="multipleLiteralArgsInput" expression="@testBean.concat('foo', 'bar')"/>

	<service-activator input-channel="multipleArgsFromPayloadInput" expression="@testBean.concat(payload.firstName, payload.lastName)"/>

	<beans:bean id="testBean" class="org.springframework.integration.config.xml.ServiceActivatorParserTests$TestBean"/>

	<service-activator id="withAdvice" input-channel="advisedInput" expression="'foo'">
		<request-handler-advice-chain>
			<beans:bean class="org.springframework.integration.config.xml.ServiceActivatorParserTests$BarAdvice" />
		</request-handler-advice-chain>
	</service-activator>
</beans:beans>
