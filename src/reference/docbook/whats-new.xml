<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="whats-new"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xlink="http://www.w3.org/1999/xlink">
	<title>What's new in Spring Integration 4.0?</title>
	<para>
		This chapter provides an overview of the new features and improvements
		that have been introduced with Spring Integration 4.0. If you are interested
		in more details, please see the Issue Tracker tickets that
		were resolved as part of the 4.0 development process.
	</para>
	<section id="4.0-new-components">
		<title>New Components</title>
		<section id="4.0-mqtt">
			<title>MQTT Channel Adapters</title>
			<para>
				The MQTT channel adapters (previously available in the Spring Integration Extensions repository)
				are now available as part of the normal Spring Integration distribution.
				See <xref linkend="mqtt"/>
			</para>
		</section>
	</section>

	<section id="4.0-general">
		<title>General Changes</title>
		<section>
			<title>Requires Spring Framework 4.0</title>
			<para>
				Core messaging abstractions (<interfacename>Message</interfacename>,
				<interfacename>MessageChannel</interfacename> etc) have moved to the Spring
				Framework <code>spring-messaging</code> module. Users who reference these
				classes directly in their code will need to make changes as described in
				the first section of the
				<ulink url="https://github.com/spring-projects/spring-integration/wiki/Spring-Integration-3.0-to-4.0-Migration-Guide"
				>Migration Guide</ulink>.
			</para>
		</section>
		<section>
			<title>@EnableIntegration</title>
			<para>
				The <code>@EnableIntegration</code> annotation has been added, to permit declaration of
				standard Spring Integration beans when using <code>@Configuration</code> classes. See
				<xref linkend="enable-integration"/> for more information.
			</para>
		</section>
		<section>
			<title>Spring Boot @EnableAutoConfiguration</title>
			<para>
				Together with <code>@EnableIntegration</code> annotation has been introduced a hook to allow
				Spring Integration infrastructure via Spring Boot <code>@EnableAutoConfiguration</code>.
				For more information see
				<ulink url="http://projects.spring.io/spring-boot/docs/spring-boot-autoconfigure/README.html">Spring Boot - AutoConfigure</ulink>.
			</para>
		</section>
		<section id="4.0-xpath-header-enricher-header-type">
			<title>Header Type for XPath Header Enricher</title>
			<para>
				The <code>header-type</code> attribute has been introduced for the <code>header</code> sub-element of the
				<code>&lt;int-xml:xpath-header-enricher&gt;</code>. This attribute provides the target type for
				the header value to which the result of the XPath expression evaluation will be converted.
				For more information see <xref linkend="xml-xpath-header-enricher"/>.
			</para>
		</section>
		<section id="4.0-object-to-json-transformer-result-type">
			<title>Object To Json Transformer: Node Result</title>
			<para>
				The <code>result-type</code> attribute has been introduced for the  <code>&lt;int:object-to-json-transformer&gt;</code>.
				This attribute provides the target type for the result of object mapping to JSON.
				It supports <code>STRING</code> (default) and <code>NODE</code>.
				For more information see <xref linkend="transformer-xpath-spel-function"/>.
			</para>
		</section>
		<section id="4.0-jms-header-mapping">
			<title>JMS Header Mapping</title>
			<para>
				The <classname>DefaultJmsHeaderMapper</classname> now maps an incoming <code>JMSPriority</code> header to
				the Spring Integration <code>priority</code> header. Previously <code>priority</code> was only
				considered for outbound messages. For more information see <xref linkend="jms-header-mapping"/>.
			</para>
		</section>
	</section>
</chapter>
