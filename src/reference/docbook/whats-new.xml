<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="whats-new"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xlink="http://www.w3.org/1999/xlink">
	<title>What's new in Spring Integration 2.2?</title>
	<para>
		This chapter provides an overview of the new features and improvements
		that have been introduced with Spring Integration 2.2 If you are interested
		in even more detail, please take a look at the Issue Tracker tickets that
		were resolved as part of the 2.2 development process:
	</para>

	<section id="2.2-general">
		<title>General</title>
		<section id="2.2-spring-31">
			<title>Spring 3.1</title>
			<para>
			  Spring Integration now uses Spring 3.1.
			</para>
		</section>
		<section id="2.2-outbound-gateways">
			<title>Outbound Gateways</title>
			<para>
				The XML Namespace support adds the <emphasis>reply-timeout</emphasis>
				attribute to the following <emphasis>Outbound Gateways</emphasis>:
			</para>
			<itemizedlist>
				<listitem>Amqp Outbound Gateway</listitem>
				<listitem>File Outbound Gateway</listitem>
				<listitem>Ftp Outbound Gateway</listitem>
				<listitem>Sftp Outbound Gateway</listitem>
				<listitem>Ws Outbound Gateway</listitem>
			</itemizedlist>
		</section>
		<section id="2.2-amqp-11">
			<title>Spring-AMQP 1.1</title>
			<para>
			  Spring Integration now uses Spring AMQP 1.1. This enables several features
			  to be used within a Spring Integration application, including...
			</para>
			<itemizedlist>
				<listitem>A fixed reply queue for the outbound gateway</listitem>
				<listitem>HA (mirrored) queues</listitem>
				<listitem>Publisher Confirms</listitem>
				<listitem>Returned Messages</listitem>
				<listitem>Support for Dead Letter Exchanges/Dead Letter Queues</listitem>
			</itemizedlist>
		</section>
		<section id="2.2-jdbc-11">
			<title>JDBC Adapter - Stored Procedures Components</title>
			<para><emphasis>SpEL Support</emphasis></para>
			<para>
				When using the Stored Procedure components of the Spring Integration
				JDBC Adapter, you can now provide Stored Procedure Names or
				Stored Function Names using Spring Expression Language (SpEL).
			</para>
			<para>
				This allows you to specify the Stored Procedures to be invoked
				at runtime. For example, you can provide Stored Procedure names
				that you would like to execute via Message Headers. For more
				information please see <xref linkend="stored-procedures"/>.
			</para>
			<para><emphasis>JMX Support</emphasis></para>
			<para>
				The Stored Procedure components now provide basic JMX support,
				exposing some of their properties as MBeans:
			</para>
			<itemizedlist>
				<listitem>Stored Procedure Name</listitem>
				<listitem>Stored Procedure Name Expression</listitem>
				<listitem>JdbcCallOperations Cache Statistics</listitem>
			</itemizedlist>
		</section>
		<section id="2.2-jdbc-gateway-update-optional">
			<title>JDBC Adapter - Outbound Gateway</title>
			<para>
				When using the JDBC Outbound Gateway, the update query is no longer
				mandatory. You can now provide solely a select query using the request
				message as a source of parameters.
			</para>
		</section>
		<section id="2.2-file-adapter">
			<title>File Adapter - Improved File Overwrite/Append Handling</title>
			<para>
				When using the <emphasis>File Oubound Channel Adapter</emphasis>
				or the <emphasis>File Outbound Gateway</emphasis>, a new
				<emphasis>mode</emphasis> property was added. Prior to
				<emphasis>Spring Integration 2.2</emphasis>, target files were
				replaced when they existed. Now you can specify
				the following options:
			</para>
			<itemizedlist>
				<listitem>REPLACE (Default)</listitem>
				<listitem>APPEND</listitem>
				<listitem>FAIL</listitem>
				<listitem>IGNORE</listitem>
			</itemizedlist>
			<para>
				For more information please see <xref linkend="file-writing-destination-exists"/>.
			</para>
		</section>
		<section id="2.2-tx">
			<title>Transaction Synchronization</title>
			<para>
				When running from a transactional poller,
				mail inbound adapters can be configured to update the mailbox only
				if the transaction commits.
			</para>
		</section>
		<section id="2.2-shutdown">
			<title>Orderly Shutdown</title>
			<para>
				A method <classname>stopActiveComponents()</classname> has been
				added to the IntegrationMBeanExporter. This allows a Spring Integration
				application to be shut down in an orderly manner, disallowing new inbound
				messages to certain adapters and waiting for some time to allow in-flight
				messages to complete.
			</para>
		</section>
		<section id="2.2-handler-advice">
			<title>Adding Behavior to Endpoints</title>
			<para>
				The ability to add an &lt;advice-chain/&gt; to a poller has been available for some time.
				However, the behavior added by this affects the entire integration flow.
				It did not address the ability to add, say, retry, to an individual
				endpoint. The 2.2. release introduces the &lt;request-handler-advice-chain/&gt;
				to many endpoints.
			</para>
			<para>
				In addition, 3 standard Advice classes have been provided for this purpose:
			</para>
			<itemizedlist>
				<listitem>MessageHandlerRetryAdvice</listitem>
				<listitem>MessageHandlerCircuitBreakerAdvice</listitem>
				<listitem>ExpressionEvaluatingMessageHandlerAdvice</listitem>
			</itemizedlist>
			<para>
				For more information, see <xref linkend="message-handler-advice-chain"/>.
			</para>
		</section>
		<section id="2.2-delayer">
			<title>Delayer - Name Attribute Added</title>
			<para>
				A <emphasis>name</emphasis> attribute was added to the delayer.
				This new attribute is mutually exclusive to the <emphasis>id</emphasis>
				attribute. However, unlike the <emphasis>id</emphasis>
				attribute, the new <emphasis>name</emphasis> attribute is also
				available inside of chains.
			</para>
			<para>
				To be more consistent with the rest of Spring Integration, the
				delayer's <emphasis>id</emphasis> attribute cannot be used inside
				of chains any longer.
			</para>
			<para>
				For more information, see <xref linkend="delayer-namespace"/>.
			</para>
		</section>
	</section>

	<section id="2.2-new-components">
		<title>New Components</title>
		<section id="2.2-jpa">
			<title>JPA Endpoints</title>
			<para>
				Spring Integration now includes components for the Java Persistence
				API (JPA) for retrieving and persisting JPA entity objects. The
				JPA Adapter includes the following components:
			</para>
			<itemizedlist>
				<listitem>
					<para><emphasis><link linkend='jpa-inbound-channel-adapter'>Inbound Channel Adapter</link></emphasis></para>
				</listitem>
				<listitem>
					<para><emphasis><link linkend='jpa-outbound-channel-adapter'>Outbound Channel Adapter</link></emphasis></para>
				</listitem>
				<listitem>
					<para><emphasis><link linkend='jpa-updating-outbound-gateway'>Updating Outbound Gateway</link></emphasis></para>
				</listitem>
				<listitem>
					<para><emphasis><link linkend='jpa-retrieving-outbound-gateway'>Retrieving Outbound Gateway</link></emphasis></para>
				</listitem>
			</itemizedlist>
			<para>
				For more information please see <xref linkend="jpa"/>
			</para>
		</section>
	</section>
	<section id="2.2-framework-refactorings">
		<title>Framework Refactoring</title>

	</section>
</chapter>
