<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="whats-new"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xlink="http://www.w3.org/1999/xlink">
	<title>What's new in Spring Integration 4.2?</title>
	<para>
		This chapter provides an overview of the new features and improvements
		that have been introduced with Spring Integration 4.1. If you are interested
		in more details, please see the Issue Tracker tickets that
		were resolved as part of the 4.1 development process.
	</para>
	<section id="4.2-new-components">
		<title>New Components</title>
		<section id="4.2-JMX">
			<title>Major JMX Rework</title>
			<para>
				A new <classname>MetricsFactory</classname> strategy interface has been introduced. This,
				together with other changes in the JMX infrastructure provides much more control
				over JMX configuration and runtime performance.
			</para>
			<para>
				However, this has some important implications for (some) user environments.
			</para>
			<para>
				For complete details, see <xref linkend="jmx-42-improvements" />.
			</para>
		</section>
	</section>
	<section id="4.2-general">
		<title>General Changes</title>
		<section id="4.2-wire-tap">
			<title>Wire Tap</title>
			<para>
				As an alternative to the existing <code>selector</code> attribute, the
				<code>&lt;wire-tap/&gt;</code> now supports the <code>selector-expression</code>
				attribute.
			</para>
		</section>
		<section id="4.2-file-outbound-channel-adapter">
			<title>File Outbound Channel Adapter</title>
			<para>
				The <code>&lt;int-file:outbound-channel-adapter&gt;</code> and
				<code>&lt;int-file:outbound-gateway&gt;</code> now support an <code>append-new-line</code> attribute.
				If set to <code>true</code>, a new line is appended to the file after a message is written.
				The default attribute value is <code>false</code>.
			</para>
		</section>
		<section id="4.2-class-package-change">
			<title>Class Package Change</title>
			<para>
				The <classname>ScatterGatherHandler</classname> class has been moved from the
				<code>org.springframework.integration.handler</code> to the
				<code>org.springframework.integration.scattergather</code>.
			</para>
		</section>
		<section id="4.2-tcp-serializers">
			<title>TCP Serializers</title>
			<para>
				The TCP <interfacename>Serializers</interfacename> no longer <code>flush()</code> the
				<classname>OutputStream</classname>; this is now done by the <classname>TcpNxxConnection</classname>
				classes. If you are using the serializers directly within user code, you may have to
				<code>flush()</code> the <classname>OutputStream</classname>.
			</para>
		</section>
		<section id="4.2-tcp-server-exceptions">
			<title>Server Socket Exceptions</title>
			<para>
				<classname>TcpConnectionServerExceptionEvent</classname>s are now published whenever an
				unexpected exception occurs on a TCP server socket (also added to 4.1.3, 4.0.7).
				See <xref linkend="tcp-events"/> for more information.
			</para>
		</section>
		<section id="4.2-tcp-gw-rto">
			<title>TCP Gateway Remote Timeout</title>
			<para>
				The <classname>TcpOutboundGateway</classname> now supports <code>remote-timeout-expression</code>
				as an alternative to the existing <code>remote-timeout</code> attribute.
				This allows setting the timeout based on each message.
			</para>
			<para>
				Also, the <code>remote-timeout</code> no longer defaults to the same value as <code>reply-timeout</code>
				which has a completely different meaning. <!-- MIGRATION -->
			</para>
			<para>
				See <xref linkend="tcp-ob-gateway-attributes"/> for more information.
			</para>
		</section>
		<section id="4.2-inbound-channel-adapter-annotation">
			<title>@InboundChannelAdapter</title>
			<para>
				Previously, the <classname>@Poller</classname> on an inbound channel adapter defaulted
				the <code>maxMessagesPerPoll</code> attribute to <code>-1</code> (infinity). This was inconsistent
				with the XML configuration of <code>&lt;inbound-channel-adapter/&gt;</code>s, which defaults
				to 1. The annotation now defaults this attribute to 1.
			</para>
		</section>
		<section id="4.2-api-changes">
			<title>API Changes</title>
			<para>
				<classname>o.s.integtation.util.FunctionIterator</classname> now requires a
				<interfacename>o.s.integration.util.Function</interfacename> instead of a
				<interfacename>reactor.function.Function</interfacename>. This was done to remove
				an unnecessary hard dependency on Reactor. Any uses of this iterator will need to
				change the import.
			</para>
			<para>
				Of course, Reactor is still supported for functionality such as the <code>Promise</code>
				gateway; the dependency was removed for those users who don't need it.
			</para>
		</section>
		<section id="4.2-jms-changes">
			<title>JMS Changes</title>
			<para>
				Previously, if a JMS message-driven inbound channel adapter or inbound gateway could
				not deliver a message due to a conversion error, an exception would be thrown back to the
				container. If the container was configured to use transactions, the message would be
				rolled back and redelivered repeatedly. The conversion process occurs before and during
				message construction so such errors were not sent to the error channel.
			</para>
			<para>
				With this release, such conversion exceptions now result in an <classname>ErrorMessage</classname>
				being sent to the error channel, with the exception as the payload. If you wish the
				transaction to be rolled back, and you have an error channel defined, the integration
				flow on the error channel must re-throw the exception (or another). If the error flow
				does not throw an exception, the transaction will be committed and the message removed.
			</para>
			<para>
				If no error-channel is defined, the exception is thrown back to the container, as before.
			</para>
		</section>
	</section>
</chapter>
