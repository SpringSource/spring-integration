<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="whats-new"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xlink="http://www.w3.org/1999/xlink">
	<title>What's new in Spring Integration 4.0?</title>
	<para>
		This chapter provides an overview of the new features and improvements
		that have been introduced with Spring Integration 4.0. If you are interested
		in more details, please see the Issue Tracker tickets that
		were resolved as part of the 4.0 development process.
	</para>
	<para>
		Please be sure to also see the
		<ulink url="https://github.com/spring-projects/spring-integration/wiki/Spring-Integration-3.0-to-4.0-Migration-Guide"
		>Migration Guide</ulink> for important changes that might affect your applications.
		Migration guides for all versions back to <emphasis>2.1</emphasis> can be found on the
		<ulink url="https://github.com/spring-projects/spring-integration/wiki">Wiki</ulink>.
	</para>
	<section id="4.0-new-components">
		<title>New Components</title>
		<section id="4.0-mqtt">
			<title>MQTT Channel Adapters</title>
			<para>
				The MQTT channel adapters (previously available in the Spring Integration Extensions repository)
				are now available as part of the normal Spring Integration distribution.
				See <xref linkend="mqtt"/>
			</para>
		</section>
		<section id="4.0-enable-configuration">
			<title>@EnableIntegration</title>
			<para>
				The <code>@EnableIntegration</code> annotation has been added, to permit declaration of
				standard Spring Integration beans when using <code>@Configuration</code> classes.
				See <xref linkend="enable-integration"/> for more information.
			</para>
		</section>
		<section id="4.0-component-scan">
			<title>@IntegrationComponentScan</title>
			<para>
				The <code>@IntegrationComponentScan</code> annotation has been added, to permit classpath
				scanning for Spring Integration specific components.
				See <xref linkend="enable-integration"/> for more information.
			</para>
		</section>
		<section id="4.0-message-history">
			<title>@EnableMessageHistory</title>
			<para>
				Message history can now be enabled with the <code>@EnableMessageHistory</code> annotation in a
				<code>@Configuration</code> class; in addition the message history settings can be modified
				by a JMX MBean. In addition auto-created <interfacename>MessageHandler</interfacename>s for
				annotated endpoints (e.g. <classname>@ServiceActivator</classname>, <classname>@Splitter</classname> etc.)
				now are also trackable by <code>MessageHistory</code>. For more information, see <xref linkend="message-history"/>.
			</para>
		</section>
		<section id="4.0-messaging-gateway">
			<title>@MessagingGateway</title>
			<para>
				Messaging gateway interfaces can now be configured with the <code>@MessagingGateway</code> annotation.
				It is an analogue of the <code>&lt;gateway/&gt;</code> xml element.
				For more information, see <xref linkend="messaging-gateway-annotation"/>.
			</para>
		</section>
		<section id="4.0-boot">
			<title>Spring Boot @EnableAutoConfiguration</title>
			<para>
				As well as the <code>@EnableIntegration</code> annotation mentioned above, a
				a hook has been introduced to allow the
				Spring Integration infrastructure beans to be configured using Spring Boot's
				<code>@EnableAutoConfiguration</code>.
				For more information see
				<ulink url="http://projects.spring.io/spring-boot/docs/spring-boot-autoconfigure/README.html"
						>Spring Boot - AutoConfigure</ulink>.
			</para>
		</section>
		<section id="4.0-global-channel-interceptor">
			<title>@GlobalChannelInterceptor</title>
			<para>
				As well as the <code>@EnableIntegration</code> annotation mentioned above,
				the <code>@GlobalChannelInterceptor</code> annotation has bean introduced.
				For more information, see <xref linkend="enable-integration"/>.
			</para>
		</section>
		<section id="4.0-enable-publisher">
			<title>@EnablePublisher</title>
			<para>
				The <code>@EnablePublisher</code> annotation has been added, to allow the specification of a
				<code>default-publisher-channel</code> for <classname>@Publisher</classname> annotations.
				See <xref linkend="enable-integration"/> for more information.
			</para>
		</section>
		<section id="4.0-redis-cms">
			<title>Redis Channel Message Stores</title>
			<para>
				A new Redis <interfacename>MessageGroupStore</interfacename>, that is optimized for
				use when backing a <classname>QueueChannel</classname> for persistence, is now
				provided.
				For more information, see <xref linkend="redis-cms"/>.
			</para>
			<para>
				A new Redis <interfacename>ChannelPriorityMessageStore</interfacename> is now
				provided. This can be used to retrieve messages by priority.
				For more information, see <xref linkend="redis-cms"/>.
			</para>
		</section>
		<section id="4.0-MBeanExport-annotation">
			<title>@EnableIntegrationMBeanExport</title>
			<para>
				The <classname>IntegrationMBeanExporter</classname> can now be enabled with the <code>@EnableIntegrationMBeanExport</code>
				annotation in a <code>@Configuration</code> class. For more information, see <xref linkend="jmx-mbean-exporter"/>.
			</para>
		</section>
		<section id="4.0-channel-security-interceptor">
			<title>ChannelSecurityInterceptorFactoryBean</title>
			<para>
				Configuration of Spring Security for message channels using <code>@Configuration</code> classes is
				now supported by using a <classname>ChannelSecurityInterceptorFactoryBean</classname>.
				For more information, see <xref linkend="security"/>.
			</para>
		</section>
	</section>

	<section id="4.0-general">
		<title>General Changes</title>
		<section>
			<title>Requires Spring Framework 4.0</title>
			<para>
				Core messaging abstractions (<interfacename>Message</interfacename>,
				<interfacename>MessageChannel</interfacename> etc) have moved to the Spring
				Framework <code>spring-messaging</code> module. Users who reference these
				classes directly in their code will need to make changes as described in
				the first section of the
				<ulink url="https://github.com/spring-projects/spring-integration/wiki/Spring-Integration-3.0-to-4.0-Migration-Guide"
				>Migration Guide</ulink>.
			</para>
		</section>
		<section id="4.0-xpath-header-enricher-header-type">
			<title>Header Type for XPath Header Enricher</title>
			<para>
				The <code>header-type</code> attribute has been introduced for the <code>header</code> sub-element of the
				<code>&lt;int-xml:xpath-header-enricher&gt;</code>. This attribute provides the target type for
				the header value to which the result of the XPath expression evaluation will be converted.
				For more information see <xref linkend="xml-xpath-header-enricher"/>.
			</para>
		</section>
		<section id="4.0-object-to-json-transformer-result-type">
			<title>Object To Json Transformer: Node Result</title>
			<para>
				The <code>result-type</code> attribute has been introduced for the  <code>&lt;int:object-to-json-transformer&gt;</code>.
				This attribute provides the target type for the result of object mapping to JSON.
				It supports <code>STRING</code> (default) and <code>NODE</code>.
				For more information see <xref linkend="transformer-xpath-spel-function"/>.
			</para>
		</section>
		<section id="4.0-jms-header-mapping">
			<title>JMS Header Mapping</title>
			<para>
				The <classname>DefaultJmsHeaderMapper</classname> now maps an incoming <code>JMSPriority</code> header to
				the Spring Integration <code>priority</code> header. Previously <code>priority</code> was only
				considered for outbound messages. For more information see <xref linkend="jms-header-mapping"/>.
			</para>
		</section>
		<section id="4.0-jms-ob">
			<title>JMS Outbound Channel Adapter</title>
			<para>
				The JMS outbound channel adapter now supports the <code>session-transacted</code> attribute
				(default false). Previously, you had to inject a customized <classname>JmsTemplate</classname>
				to use transactions. See <xref linkend="jms-outbound-channel-adapter"/>.
			</para>
		</section>
		<section id="4.0-jms-ib">
			<title>JMS Inbound Channel Adapter</title>
			<para>
				The JMS inbound channel adapter now supports the <code>session-transacted</code> attribute
				(default false). Previously, you had to inject a customized <classname>JmsTemplate</classname>
				to use transactions (the adapter allowed 'transacted' in the acknowledgeMode which was
				incorrect, and didn't work; this value is no longer allowed). See
				<xref linkend="jms-inbound-channel-adapter"/>.
			</para>
		</section>
		<section id="4.0-datatype-channel">
			<title>Datatype Channels</title>
			<para>
				You can now specify a <interfacename>MessageConverter</interfacename> to be used when converting
				(if necessary) payloads to one of the accepted <code>datatype</code>s in a Datatype channel.
				For more information see <xref linkend="channel-datatype-channel"/>.
			</para>
		</section>
		<section id="4.0-retry-config">
			<title>Simpler Retry Advice Configuration</title>
			<para>
				Simplified namespace support has been added to configure a
				<classname>RequestHandlerRetryAdvice</classname>.
				For more information see <xref linkend="retry-config"/>.
			</para>
		</section>
	</section>
</chapter>
