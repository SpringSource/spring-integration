<?xml version="1.0" encoding="UTF-8"?>
<preface xmlns="https://docbook.org/ns/docbook" xmlns:xlink="https://www.w3.org/1999/xlink" version="5.0" xml:id="preface">
	<title>Preface</title>
	<section id="system-requirements">
		<title>Requirements</title>
		<para>
			This section details the compatible
			<ulink url="https://www.oracle.com/technetwork/java/javase/downloads/index.html">Java</ulink>
			and <ulink url="https://www.springsource.org/spring-framework">Spring Framework</ulink>
			versions.
		</para>
		<section id="supported-java-versions">
			<title>Compatible Java Versions</title>
			<para>
				For <emphasis>Spring Integration</emphasis> <emphasis role="strong">4.0.x</emphasis>,
				the <emphasis role="strong">minimum</emphasis> compatible Java
				version is <emphasis role="strong">Java SE 6</emphasis>.
				Older versions of Java are not supported.
			</para>
			<para>
				<emphasis>Spring Integration</emphasis> <emphasis role="strong">4.0.x</emphasis>
				is also compatible with <emphasis role="strong">Java SE 7</emphasis> as well
				as <emphasis role="strong">Java SE 8</emphasis>.
			</para>
		</section>
		<section id="supported-spring-versions">
			<title>Compatible Versions of the Spring Framework</title>
			<para>
				<emphasis>Spring Integration</emphasis>
				<emphasis role="strong">4.0.x</emphasis> requires
				<emphasis>Spring Framework</emphasis> <emphasis role="strong">4.0.3</emphasis> or
				later.
			</para>
		</section>
	</section>
	<section id="code-conventions">
		<title>Code Conventions</title>
		<para>
		The Spring Framework 2.0 introduced support for namespaces, which
		simplifies the Xml configuration of the application context, and consequently
		Spring Integration provides broad namespace support. This reference guide
		applies the following conventions for all code examples that use namespace
		support:
		</para>
		<para>
		The <emphasis role="bold">int</emphasis> namespace prefix will be used for
		Spring Integration's core namespace support. Each Spring Integration adapter
		type (module) will provide its own namespace, which is configured using the
		following convention:
        </para>
        <para>
			<emphasis role="bold">int-</emphasis> followed by the name of the module, e.g.
			<emphasis role="bold">int-twitter</emphasis>,
			<emphasis role="bold">int-stream</emphasis>, …

			<programlisting  language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="https://www.springframework.org/schema/beans"
  xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance"
  xmlns:int="https://www.springframework.org/schema/integration"
  xmlns:int-twitter="https://www.springframework.org/schema/integration/twitter"
  xmlns:int-stream="https://www.springframework.org/schema/integration/stream"
  xsi:schemaLocation="
   https://www.springframework.org/schema/beans
   https://www.springframework.org/schema/beans/spring-beans.xsd
   https://www.springframework.org/schema/integration
   https://www.springframework.org/schema/integration/spring-integration.xsd
   https://www.springframework.org/schema/integration/twitter
   https://www.springframework.org/schema/integration/twitter/spring-integration-twitter.xsd
   https://www.springframework.org/schema/integration/stream
   https://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd">
…
</beans>]]></programlisting>
		</para>
        <para>
		For a detailed explanation regarding Spring Integration's namespace support
		see <emphasis><xref linkend="configuration-namespace"/></emphasis>.
		<note>
		   Please note that the namespace prefix can be freely chosen. You may
		   even choose not to use any namespace prefixes at all. Therefore,
		   apply the convention that suits your application needs best. Be aware,
		   though, that SpringSource Tool Suite™ (STS) uses the same namespace
		   conventions for Spring Integration as used in this reference guide.
		</note>
		</para>

	</section>
</preface>
