task fixFinal << {
	fileTree("${buildDir}/reports/checkstyle").include('*.xml').each { report ->
		def xml = new XmlParser(false, false).parse(report)
		xml.file.each { f ->
			def errors = f.error
			def finalErrors = []
			errors.each { error ->
				if (error.@source == 'com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck') {
					finalErrors.add(error)
				}
			}
			if (finalErrors) {
				def errorInx = 0
				def error = finalErrors[errorInx++]
				def file = new File(f.@name)
				println "Fixing file $file ..."
				boolean headerFixed
				boolean onNextLine
				def outSource = ''
				file.eachLine { line, ln ->
					if (!headerFixed) {
						def matcher = line =~ /Copyright (20\d\d)(?:-(20\d\d))?/
						if (matcher.count) {
							def year1 = matcher[0][1]
							if (now != year1) {
								if (now != matcher[0][2]) {
									line = line.replaceFirst(/(20\d\d)(?:-20\d\d)?/, year1 + "-$now")
								}
							}
							headerFixed = true
						}
					}

					if (onNextLine || error && ln == (error.@line as int)) {
						onNextLine = false
						if (line.contains('@SuppressWarning')) {
							onNextLine = true;
						}
						else {
							line = line.replaceFirst('class', 'final class')

							println "Fixed line $line"

							error = finalErrors[errorInx++]
						}
					}

					outSource += line + '\n'
				}
				file.write(outSource)
				println()
			}
		}
	}
}
